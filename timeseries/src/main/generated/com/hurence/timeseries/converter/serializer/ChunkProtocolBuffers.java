// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chunk_protocol_buffers.proto

package com.hurence.timeseries.converter.serializer;

public final class ChunkProtocolBuffers {
  private ChunkProtocolBuffers() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:serializer.Point)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *The delta as long
     * </pre>
     *
     * <code>optional uint64 tlong = 1;</code>
     * @return Whether the tlong field is set.
     */
    boolean hasTlong();
    /**
     * <pre>
     *The delta as long
     * </pre>
     *
     * <code>optional uint64 tlong = 1;</code>
     * @return The tlong.
     */
    long getTlong();

    /**
     * <pre>
     *Perhaps we can store the delta as int
     * </pre>
     *
     * <code>optional uint32 tint = 2;</code>
     * @return Whether the tint field is set.
     */
    boolean hasTint();
    /**
     * <pre>
     *Perhaps we can store the delta as int
     * </pre>
     *
     * <code>optional uint32 tint = 2;</code>
     * @return The tint.
     */
    int getTint();

    /**
     * <pre>
     *Value
     * </pre>
     *
     * <code>optional double v = 3;</code>
     * @return Whether the v field is set.
     */
    boolean hasV();
    /**
     * <pre>
     *Value
     * </pre>
     *
     * <code>optional double v = 3;</code>
     * @return The v.
     */
    double getV();

    /**
     * <pre>
     *Or the index of the value
     * </pre>
     *
     * <code>optional uint32 vIndex = 4;</code>
     * @return Whether the vIndex field is set.
     */
    boolean hasVIndex();
    /**
     * <pre>
     *Or the index of the value
     * </pre>
     *
     * <code>optional uint32 vIndex = 4;</code>
     * @return The vIndex.
     */
    int getVIndex();

    /**
     * <pre>
     *timestamp base deltas
     * </pre>
     *
     * <code>optional uint64 tlongBP = 5;</code>
     * @return Whether the tlongBP field is set.
     */
    boolean hasTlongBP();
    /**
     * <pre>
     *timestamp base deltas
     * </pre>
     *
     * <code>optional uint64 tlongBP = 5;</code>
     * @return The tlongBP.
     */
    long getTlongBP();

    /**
     * <code>optional uint32 tintBP = 6;</code>
     * @return Whether the tintBP field is set.
     */
    boolean hasTintBP();
    /**
     * <code>optional uint32 tintBP = 6;</code>
     * @return The tintBP.
     */
    int getTintBP();
  }
  /**
   * <pre>
   *Our point
   * </pre>
   *
   * Protobuf type {@code serializer.Point}
   */
  public static final class Point extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:serializer.Point)
      PointOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Point.newBuilder() to construct.
    private Point(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Point() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Point();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Point(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              tlong_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tint_ = input.readUInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              v_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              vIndex_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              tlongBP_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              tintBP_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Point_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Point_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.class, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder.class);
    }

    private int bitField0_;
    public static final int TLONG_FIELD_NUMBER = 1;
    private long tlong_;
    /**
     * <pre>
     *The delta as long
     * </pre>
     *
     * <code>optional uint64 tlong = 1;</code>
     * @return Whether the tlong field is set.
     */
    @java.lang.Override
    public boolean hasTlong() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *The delta as long
     * </pre>
     *
     * <code>optional uint64 tlong = 1;</code>
     * @return The tlong.
     */
    @java.lang.Override
    public long getTlong() {
      return tlong_;
    }

    public static final int TINT_FIELD_NUMBER = 2;
    private int tint_;
    /**
     * <pre>
     *Perhaps we can store the delta as int
     * </pre>
     *
     * <code>optional uint32 tint = 2;</code>
     * @return Whether the tint field is set.
     */
    @java.lang.Override
    public boolean hasTint() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *Perhaps we can store the delta as int
     * </pre>
     *
     * <code>optional uint32 tint = 2;</code>
     * @return The tint.
     */
    @java.lang.Override
    public int getTint() {
      return tint_;
    }

    public static final int V_FIELD_NUMBER = 3;
    private double v_;
    /**
     * <pre>
     *Value
     * </pre>
     *
     * <code>optional double v = 3;</code>
     * @return Whether the v field is set.
     */
    @java.lang.Override
    public boolean hasV() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *Value
     * </pre>
     *
     * <code>optional double v = 3;</code>
     * @return The v.
     */
    @java.lang.Override
    public double getV() {
      return v_;
    }

    public static final int VINDEX_FIELD_NUMBER = 4;
    private int vIndex_;
    /**
     * <pre>
     *Or the index of the value
     * </pre>
     *
     * <code>optional uint32 vIndex = 4;</code>
     * @return Whether the vIndex field is set.
     */
    @java.lang.Override
    public boolean hasVIndex() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     *Or the index of the value
     * </pre>
     *
     * <code>optional uint32 vIndex = 4;</code>
     * @return The vIndex.
     */
    @java.lang.Override
    public int getVIndex() {
      return vIndex_;
    }

    public static final int TLONGBP_FIELD_NUMBER = 5;
    private long tlongBP_;
    /**
     * <pre>
     *timestamp base deltas
     * </pre>
     *
     * <code>optional uint64 tlongBP = 5;</code>
     * @return Whether the tlongBP field is set.
     */
    @java.lang.Override
    public boolean hasTlongBP() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     *timestamp base deltas
     * </pre>
     *
     * <code>optional uint64 tlongBP = 5;</code>
     * @return The tlongBP.
     */
    @java.lang.Override
    public long getTlongBP() {
      return tlongBP_;
    }

    public static final int TINTBP_FIELD_NUMBER = 6;
    private int tintBP_;
    /**
     * <code>optional uint32 tintBP = 6;</code>
     * @return Whether the tintBP field is set.
     */
    @java.lang.Override
    public boolean hasTintBP() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint32 tintBP = 6;</code>
     * @return The tintBP.
     */
    @java.lang.Override
    public int getTintBP() {
      return tintBP_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, tlong_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, tint_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, v_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, vIndex_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt64(5, tlongBP_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, tintBP_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, tlong_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tint_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, v_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, vIndex_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, tlongBP_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, tintBP_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point)) {
        return super.equals(obj);
      }
      com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point other = (com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point) obj;

      if (hasTlong() != other.hasTlong()) return false;
      if (hasTlong()) {
        if (getTlong()
            != other.getTlong()) return false;
      }
      if (hasTint() != other.hasTint()) return false;
      if (hasTint()) {
        if (getTint()
            != other.getTint()) return false;
      }
      if (hasV() != other.hasV()) return false;
      if (hasV()) {
        if (java.lang.Double.doubleToLongBits(getV())
            != java.lang.Double.doubleToLongBits(
                other.getV())) return false;
      }
      if (hasVIndex() != other.hasVIndex()) return false;
      if (hasVIndex()) {
        if (getVIndex()
            != other.getVIndex()) return false;
      }
      if (hasTlongBP() != other.hasTlongBP()) return false;
      if (hasTlongBP()) {
        if (getTlongBP()
            != other.getTlongBP()) return false;
      }
      if (hasTintBP() != other.hasTintBP()) return false;
      if (hasTintBP()) {
        if (getTintBP()
            != other.getTintBP()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTlong()) {
        hash = (37 * hash) + TLONG_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTlong());
      }
      if (hasTint()) {
        hash = (37 * hash) + TINT_FIELD_NUMBER;
        hash = (53 * hash) + getTint();
      }
      if (hasV()) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getV()));
      }
      if (hasVIndex()) {
        hash = (37 * hash) + VINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getVIndex();
      }
      if (hasTlongBP()) {
        hash = (37 * hash) + TLONGBP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTlongBP());
      }
      if (hasTintBP()) {
        hash = (37 * hash) + TINTBP_FIELD_NUMBER;
        hash = (53 * hash) + getTintBP();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *Our point
     * </pre>
     *
     * Protobuf type {@code serializer.Point}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:serializer.Point)
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Point_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Point_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.class, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder.class);
      }

      // Construct using com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tlong_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        tint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        v_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        vIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        tlongBP_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        tintBP_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Point_descriptor;
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point getDefaultInstanceForType() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.getDefaultInstance();
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point build() {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point buildPartial() {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point result = new com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tlong_ = tlong_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tint_ = tint_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.v_ = v_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.vIndex_ = vIndex_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.tlongBP_ = tlongBP_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.tintBP_ = tintBP_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point) {
          return mergeFrom((com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point other) {
        if (other == com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.getDefaultInstance()) return this;
        if (other.hasTlong()) {
          setTlong(other.getTlong());
        }
        if (other.hasTint()) {
          setTint(other.getTint());
        }
        if (other.hasV()) {
          setV(other.getV());
        }
        if (other.hasVIndex()) {
          setVIndex(other.getVIndex());
        }
        if (other.hasTlongBP()) {
          setTlongBP(other.getTlongBP());
        }
        if (other.hasTintBP()) {
          setTintBP(other.getTintBP());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long tlong_ ;
      /**
       * <pre>
       *The delta as long
       * </pre>
       *
       * <code>optional uint64 tlong = 1;</code>
       * @return Whether the tlong field is set.
       */
      @java.lang.Override
      public boolean hasTlong() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *The delta as long
       * </pre>
       *
       * <code>optional uint64 tlong = 1;</code>
       * @return The tlong.
       */
      @java.lang.Override
      public long getTlong() {
        return tlong_;
      }
      /**
       * <pre>
       *The delta as long
       * </pre>
       *
       * <code>optional uint64 tlong = 1;</code>
       * @param value The tlong to set.
       * @return This builder for chaining.
       */
      public Builder setTlong(long value) {
        bitField0_ |= 0x00000001;
        tlong_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *The delta as long
       * </pre>
       *
       * <code>optional uint64 tlong = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTlong() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tlong_ = 0L;
        onChanged();
        return this;
      }

      private int tint_ ;
      /**
       * <pre>
       *Perhaps we can store the delta as int
       * </pre>
       *
       * <code>optional uint32 tint = 2;</code>
       * @return Whether the tint field is set.
       */
      @java.lang.Override
      public boolean hasTint() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *Perhaps we can store the delta as int
       * </pre>
       *
       * <code>optional uint32 tint = 2;</code>
       * @return The tint.
       */
      @java.lang.Override
      public int getTint() {
        return tint_;
      }
      /**
       * <pre>
       *Perhaps we can store the delta as int
       * </pre>
       *
       * <code>optional uint32 tint = 2;</code>
       * @param value The tint to set.
       * @return This builder for chaining.
       */
      public Builder setTint(int value) {
        bitField0_ |= 0x00000002;
        tint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Perhaps we can store the delta as int
       * </pre>
       *
       * <code>optional uint32 tint = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTint() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tint_ = 0;
        onChanged();
        return this;
      }

      private double v_ ;
      /**
       * <pre>
       *Value
       * </pre>
       *
       * <code>optional double v = 3;</code>
       * @return Whether the v field is set.
       */
      @java.lang.Override
      public boolean hasV() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *Value
       * </pre>
       *
       * <code>optional double v = 3;</code>
       * @return The v.
       */
      @java.lang.Override
      public double getV() {
        return v_;
      }
      /**
       * <pre>
       *Value
       * </pre>
       *
       * <code>optional double v = 3;</code>
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(double value) {
        bitField0_ |= 0x00000004;
        v_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Value
       * </pre>
       *
       * <code>optional double v = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        bitField0_ = (bitField0_ & ~0x00000004);
        v_ = 0D;
        onChanged();
        return this;
      }

      private int vIndex_ ;
      /**
       * <pre>
       *Or the index of the value
       * </pre>
       *
       * <code>optional uint32 vIndex = 4;</code>
       * @return Whether the vIndex field is set.
       */
      @java.lang.Override
      public boolean hasVIndex() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       *Or the index of the value
       * </pre>
       *
       * <code>optional uint32 vIndex = 4;</code>
       * @return The vIndex.
       */
      @java.lang.Override
      public int getVIndex() {
        return vIndex_;
      }
      /**
       * <pre>
       *Or the index of the value
       * </pre>
       *
       * <code>optional uint32 vIndex = 4;</code>
       * @param value The vIndex to set.
       * @return This builder for chaining.
       */
      public Builder setVIndex(int value) {
        bitField0_ |= 0x00000008;
        vIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Or the index of the value
       * </pre>
       *
       * <code>optional uint32 vIndex = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearVIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vIndex_ = 0;
        onChanged();
        return this;
      }

      private long tlongBP_ ;
      /**
       * <pre>
       *timestamp base deltas
       * </pre>
       *
       * <code>optional uint64 tlongBP = 5;</code>
       * @return Whether the tlongBP field is set.
       */
      @java.lang.Override
      public boolean hasTlongBP() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       *timestamp base deltas
       * </pre>
       *
       * <code>optional uint64 tlongBP = 5;</code>
       * @return The tlongBP.
       */
      @java.lang.Override
      public long getTlongBP() {
        return tlongBP_;
      }
      /**
       * <pre>
       *timestamp base deltas
       * </pre>
       *
       * <code>optional uint64 tlongBP = 5;</code>
       * @param value The tlongBP to set.
       * @return This builder for chaining.
       */
      public Builder setTlongBP(long value) {
        bitField0_ |= 0x00000010;
        tlongBP_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *timestamp base deltas
       * </pre>
       *
       * <code>optional uint64 tlongBP = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTlongBP() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tlongBP_ = 0L;
        onChanged();
        return this;
      }

      private int tintBP_ ;
      /**
       * <code>optional uint32 tintBP = 6;</code>
       * @return Whether the tintBP field is set.
       */
      @java.lang.Override
      public boolean hasTintBP() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint32 tintBP = 6;</code>
       * @return The tintBP.
       */
      @java.lang.Override
      public int getTintBP() {
        return tintBP_;
      }
      /**
       * <code>optional uint32 tintBP = 6;</code>
       * @param value The tintBP to set.
       * @return This builder for chaining.
       */
      public Builder setTintBP(int value) {
        bitField0_ |= 0x00000020;
        tintBP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tintBP = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTintBP() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tintBP_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:serializer.Point)
    }

    // @@protoc_insertion_point(class_scope:serializer.Point)
    private static final com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point();
    }

    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Point>
        PARSER = new com.google.protobuf.AbstractParser<Point>() {
      @java.lang.Override
      public Point parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Point(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Point> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Point> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChunkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:serializer.Chunk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point> 
        getPList();
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point getP(int index);
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    int getPCount();
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    java.util.List<? extends com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder> 
        getPOrBuilderList();
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder getPOrBuilder(
        int index);

    /**
     * <pre>
     *the used ddc threshold
     * </pre>
     *
     * <code>optional uint32 ddc = 2;</code>
     * @return Whether the ddc field is set.
     */
    boolean hasDdc();
    /**
     * <pre>
     *the used ddc threshold
     * </pre>
     *
     * <code>optional uint32 ddc = 2;</code>
     * @return The ddc.
     */
    int getDdc();

    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality> 
        getQList();
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality getQ(int index);
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    int getQCount();
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    java.util.List<? extends com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder> 
        getQOrBuilderList();
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder getQOrBuilder(
        int index);

    /**
     * <pre>
     * metric name
     * </pre>
     *
     * <code>optional string name = 4;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * metric name
     * </pre>
     *
     * <code>optional string name = 4;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * metric name
     * </pre>
     *
     * <code>optional string name = 4;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * UTC timestamp for start time of the chunk (in ms)
     * </pre>
     *
     * <code>optional uint64 start = 5;</code>
     * @return Whether the start field is set.
     */
    boolean hasStart();
    /**
     * <pre>
     * UTC timestamp for start time of the chunk (in ms)
     * </pre>
     *
     * <code>optional uint64 start = 5;</code>
     * @return The start.
     */
    long getStart();

    /**
     * <pre>
     * UTC timestamp for end time of the chunk (in ms)
     * </pre>
     *
     * <code>optional uint64 end = 6;</code>
     * @return Whether the end field is set.
     */
    boolean hasEnd();
    /**
     * <pre>
     * UTC timestamp for end time of the chunk (in ms)
     * </pre>
     *
     * <code>optional uint64 end = 6;</code>
     * @return The end.
     */
    long getEnd();

    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */
    int getAggsCount();
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */
    boolean containsAggs(
        java.lang.String key);
    /**
     * Use {@link #getAggsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Double>
    getAggs();
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */
    java.util.Map<java.lang.String, java.lang.Double>
    getAggsMap();
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */

    double getAggsOrDefault(
        java.lang.String key,
        double defaultValue);
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */

    double getAggsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */
    int getTagsCount();
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */
    boolean containsTags(
        java.lang.String key);
    /**
     * Use {@link #getTagsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getTags();
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getTagsMap();
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */

    java.lang.String getTagsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */

    java.lang.String getTagsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   *The data of a time series is a list of points
   * </pre>
   *
   * Protobuf type {@code serializer.Chunk}
   */
  public static final class Chunk extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:serializer.Chunk)
      ChunkOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Chunk.newBuilder() to construct.
    private Chunk(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Chunk() {
      p_ = java.util.Collections.emptyList();
      q_ = java.util.Collections.emptyList();
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Chunk();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Chunk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                p_ = new java.util.ArrayList<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point>();
                mutable_bitField0_ |= 0x00000001;
              }
              p_.add(
                  input.readMessage(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              ddc_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                q_ = new java.util.ArrayList<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality>();
                mutable_bitField0_ |= 0x00000004;
              }
              q_.add(
                  input.readMessage(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              name_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              start_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              end_ = input.readUInt64();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                aggs_ = com.google.protobuf.MapField.newMapField(
                    AggsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
              aggs__ = input.readMessage(
                  AggsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              aggs_.getMutableMap().put(
                  aggs__.getKey(), aggs__.getValue());
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                tags_ = com.google.protobuf.MapField.newMapField(
                    TagsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              tags__ = input.readMessage(
                  TagsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              tags_.getMutableMap().put(
                  tags__.getKey(), tags__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          p_ = java.util.Collections.unmodifiableList(p_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          q_ = java.util.Collections.unmodifiableList(q_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Chunk_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetAggs();
        case 8:
          return internalGetTags();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Chunk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk.class, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk.Builder.class);
    }

    private int bitField0_;
    public static final int P_FIELD_NUMBER = 1;
    private java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point> p_;
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    @java.lang.Override
    public java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point> getPList() {
      return p_;
    }
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder> 
        getPOrBuilderList() {
      return p_;
    }
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    @java.lang.Override
    public int getPCount() {
      return p_.size();
    }
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    @java.lang.Override
    public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point getP(int index) {
      return p_.get(index);
    }
    /**
     * <pre>
     *The list of points
     * </pre>
     *
     * <code>repeated .serializer.Point p = 1;</code>
     */
    @java.lang.Override
    public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder getPOrBuilder(
        int index) {
      return p_.get(index);
    }

    public static final int DDC_FIELD_NUMBER = 2;
    private int ddc_;
    /**
     * <pre>
     *the used ddc threshold
     * </pre>
     *
     * <code>optional uint32 ddc = 2;</code>
     * @return Whether the ddc field is set.
     */
    @java.lang.Override
    public boolean hasDdc() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *the used ddc threshold
     * </pre>
     *
     * <code>optional uint32 ddc = 2;</code>
     * @return The ddc.
     */
    @java.lang.Override
    public int getDdc() {
      return ddc_;
    }

    public static final int Q_FIELD_NUMBER = 3;
    private java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality> q_;
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality> getQList() {
      return q_;
    }
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder> 
        getQOrBuilderList() {
      return q_;
    }
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    @java.lang.Override
    public int getQCount() {
      return q_.size();
    }
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    @java.lang.Override
    public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality getQ(int index) {
      return q_.get(index);
    }
    /**
     * <pre>
     *The list of qualities, only saving for each change
     * </pre>
     *
     * <code>repeated .serializer.Quality q = 3;</code>
     */
    @java.lang.Override
    public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder getQOrBuilder(
        int index) {
      return q_.get(index);
    }

    public static final int NAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * metric name
     * </pre>
     *
     * <code>optional string name = 4;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * metric name
     * </pre>
     *
     * <code>optional string name = 4;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * metric name
     * </pre>
     *
     * <code>optional string name = 4;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_FIELD_NUMBER = 5;
    private long start_;
    /**
     * <pre>
     * UTC timestamp for start time of the chunk (in ms)
     * </pre>
     *
     * <code>optional uint64 start = 5;</code>
     * @return Whether the start field is set.
     */
    @java.lang.Override
    public boolean hasStart() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * UTC timestamp for start time of the chunk (in ms)
     * </pre>
     *
     * <code>optional uint64 start = 5;</code>
     * @return The start.
     */
    @java.lang.Override
    public long getStart() {
      return start_;
    }

    public static final int END_FIELD_NUMBER = 6;
    private long end_;
    /**
     * <pre>
     * UTC timestamp for end time of the chunk (in ms)
     * </pre>
     *
     * <code>optional uint64 end = 6;</code>
     * @return Whether the end field is set.
     */
    @java.lang.Override
    public boolean hasEnd() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * UTC timestamp for end time of the chunk (in ms)
     * </pre>
     *
     * <code>optional uint64 end = 6;</code>
     * @return The end.
     */
    @java.lang.Override
    public long getEnd() {
      return end_;
    }

    public static final int AGGS_FIELD_NUMBER = 7;
    private static final class AggsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Double> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Double>newDefaultInstance(
                  com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Chunk_AggsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.DOUBLE,
                  0D);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Double> aggs_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
    internalGetAggs() {
      if (aggs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AggsDefaultEntryHolder.defaultEntry);
      }
      return aggs_;
    }

    public int getAggsCount() {
      return internalGetAggs().getMap().size();
    }
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */

    @java.lang.Override
    public boolean containsAggs(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetAggs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAggsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Double> getAggs() {
      return getAggsMap();
    }
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.Double> getAggsMap() {
      return internalGetAggs().getMap();
    }
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */
    @java.lang.Override

    public double getAggsOrDefault(
        java.lang.String key,
        double defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetAggs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, double&gt; aggs = 7;</code>
     */
    @java.lang.Override

    public double getAggsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Double> map =
          internalGetAggs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TAGS_FIELD_NUMBER = 8;
    private static final class TagsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Chunk_TagsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> tags_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetTags() {
      if (tags_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TagsDefaultEntryHolder.defaultEntry);
      }
      return tags_;
    }

    public int getTagsCount() {
      return internalGetTags().getMap().size();
    }
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */

    @java.lang.Override
    public boolean containsTags(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetTags().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTagsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getTags() {
      return getTagsMap();
    }
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
      return internalGetTags().getMap();
    }
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */
    @java.lang.Override

    public java.lang.String getTagsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTags().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * map for precomputed aggs if available
     * </pre>
     *
     * <code>map&lt;string, string&gt; tags = 8;</code>
     */
    @java.lang.Override

    public java.lang.String getTagsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetTags().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < p_.size(); i++) {
        output.writeMessage(1, p_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(2, ddc_);
      }
      for (int i = 0; i < q_.size(); i++) {
        output.writeMessage(3, q_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(5, start_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(6, end_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAggs(),
          AggsDefaultEntryHolder.defaultEntry,
          7);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTags(),
          TagsDefaultEntryHolder.defaultEntry,
          8);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < p_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, p_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, ddc_);
      }
      for (int i = 0; i < q_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, q_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, name_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, start_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, end_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
           : internalGetAggs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
        aggs__ = AggsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, aggs__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetTags().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        tags__ = TagsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, tags__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk)) {
        return super.equals(obj);
      }
      com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk other = (com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk) obj;

      if (!getPList()
          .equals(other.getPList())) return false;
      if (hasDdc() != other.hasDdc()) return false;
      if (hasDdc()) {
        if (getDdc()
            != other.getDdc()) return false;
      }
      if (!getQList()
          .equals(other.getQList())) return false;
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasStart() != other.hasStart()) return false;
      if (hasStart()) {
        if (getStart()
            != other.getStart()) return false;
      }
      if (hasEnd() != other.hasEnd()) return false;
      if (hasEnd()) {
        if (getEnd()
            != other.getEnd()) return false;
      }
      if (!internalGetAggs().equals(
          other.internalGetAggs())) return false;
      if (!internalGetTags().equals(
          other.internalGetTags())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPCount() > 0) {
        hash = (37 * hash) + P_FIELD_NUMBER;
        hash = (53 * hash) + getPList().hashCode();
      }
      if (hasDdc()) {
        hash = (37 * hash) + DDC_FIELD_NUMBER;
        hash = (53 * hash) + getDdc();
      }
      if (getQCount() > 0) {
        hash = (37 * hash) + Q_FIELD_NUMBER;
        hash = (53 * hash) + getQList().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasStart()) {
        hash = (37 * hash) + START_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getStart());
      }
      if (hasEnd()) {
        hash = (37 * hash) + END_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEnd());
      }
      if (!internalGetAggs().getMap().isEmpty()) {
        hash = (37 * hash) + AGGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAggs().hashCode();
      }
      if (!internalGetTags().getMap().isEmpty()) {
        hash = (37 * hash) + TAGS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTags().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *The data of a time series is a list of points
     * </pre>
     *
     * Protobuf type {@code serializer.Chunk}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:serializer.Chunk)
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.ChunkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Chunk_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetAggs();
          case 8:
            return internalGetTags();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableAggs();
          case 8:
            return internalGetMutableTags();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Chunk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk.class, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk.Builder.class);
      }

      // Construct using com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPFieldBuilder();
          getQFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (pBuilder_ == null) {
          p_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          pBuilder_.clear();
        }
        ddc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (qBuilder_ == null) {
          q_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          qBuilder_.clear();
        }
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        start_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        end_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        internalGetMutableAggs().clear();
        internalGetMutableTags().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Chunk_descriptor;
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk getDefaultInstanceForType() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk.getDefaultInstance();
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk build() {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk buildPartial() {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk result = new com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (pBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            p_ = java.util.Collections.unmodifiableList(p_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.p_ = p_;
        } else {
          result.p_ = pBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ddc_ = ddc_;
          to_bitField0_ |= 0x00000001;
        }
        if (qBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            q_ = java.util.Collections.unmodifiableList(q_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.q_ = q_;
        } else {
          result.q_ = qBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.start_ = start_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.end_ = end_;
          to_bitField0_ |= 0x00000008;
        }
        result.aggs_ = internalGetAggs();
        result.aggs_.makeImmutable();
        result.tags_ = internalGetTags();
        result.tags_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk) {
          return mergeFrom((com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk other) {
        if (other == com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk.getDefaultInstance()) return this;
        if (pBuilder_ == null) {
          if (!other.p_.isEmpty()) {
            if (p_.isEmpty()) {
              p_ = other.p_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePIsMutable();
              p_.addAll(other.p_);
            }
            onChanged();
          }
        } else {
          if (!other.p_.isEmpty()) {
            if (pBuilder_.isEmpty()) {
              pBuilder_.dispose();
              pBuilder_ = null;
              p_ = other.p_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPFieldBuilder() : null;
            } else {
              pBuilder_.addAllMessages(other.p_);
            }
          }
        }
        if (other.hasDdc()) {
          setDdc(other.getDdc());
        }
        if (qBuilder_ == null) {
          if (!other.q_.isEmpty()) {
            if (q_.isEmpty()) {
              q_ = other.q_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureQIsMutable();
              q_.addAll(other.q_);
            }
            onChanged();
          }
        } else {
          if (!other.q_.isEmpty()) {
            if (qBuilder_.isEmpty()) {
              qBuilder_.dispose();
              qBuilder_ = null;
              q_ = other.q_;
              bitField0_ = (bitField0_ & ~0x00000004);
              qBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getQFieldBuilder() : null;
            } else {
              qBuilder_.addAllMessages(other.q_);
            }
          }
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000008;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasStart()) {
          setStart(other.getStart());
        }
        if (other.hasEnd()) {
          setEnd(other.getEnd());
        }
        internalGetMutableAggs().mergeFrom(
            other.internalGetAggs());
        internalGetMutableTags().mergeFrom(
            other.internalGetTags());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point> p_ =
        java.util.Collections.emptyList();
      private void ensurePIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          p_ = new java.util.ArrayList<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point>(p_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder> pBuilder_;

      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point> getPList() {
        if (pBuilder_ == null) {
          return java.util.Collections.unmodifiableList(p_);
        } else {
          return pBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public int getPCount() {
        if (pBuilder_ == null) {
          return p_.size();
        } else {
          return pBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point getP(int index) {
        if (pBuilder_ == null) {
          return p_.get(index);
        } else {
          return pBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder setP(
          int index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point value) {
        if (pBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePIsMutable();
          p_.set(index, value);
          onChanged();
        } else {
          pBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder setP(
          int index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder builderForValue) {
        if (pBuilder_ == null) {
          ensurePIsMutable();
          p_.set(index, builderForValue.build());
          onChanged();
        } else {
          pBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder addP(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point value) {
        if (pBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePIsMutable();
          p_.add(value);
          onChanged();
        } else {
          pBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder addP(
          int index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point value) {
        if (pBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePIsMutable();
          p_.add(index, value);
          onChanged();
        } else {
          pBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder addP(
          com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder builderForValue) {
        if (pBuilder_ == null) {
          ensurePIsMutable();
          p_.add(builderForValue.build());
          onChanged();
        } else {
          pBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder addP(
          int index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder builderForValue) {
        if (pBuilder_ == null) {
          ensurePIsMutable();
          p_.add(index, builderForValue.build());
          onChanged();
        } else {
          pBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder addAllP(
          java.lang.Iterable<? extends com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point> values) {
        if (pBuilder_ == null) {
          ensurePIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, p_);
          onChanged();
        } else {
          pBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder clearP() {
        if (pBuilder_ == null) {
          p_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public Builder removeP(int index) {
        if (pBuilder_ == null) {
          ensurePIsMutable();
          p_.remove(index);
          onChanged();
        } else {
          pBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder getPBuilder(
          int index) {
        return getPFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder getPOrBuilder(
          int index) {
        if (pBuilder_ == null) {
          return p_.get(index);  } else {
          return pBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public java.util.List<? extends com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder> 
           getPOrBuilderList() {
        if (pBuilder_ != null) {
          return pBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(p_);
        }
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder addPBuilder() {
        return getPFieldBuilder().addBuilder(
            com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.getDefaultInstance());
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder addPBuilder(
          int index) {
        return getPFieldBuilder().addBuilder(
            index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.getDefaultInstance());
      }
      /**
       * <pre>
       *The list of points
       * </pre>
       *
       * <code>repeated .serializer.Point p = 1;</code>
       */
      public java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder> 
           getPBuilderList() {
        return getPFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder> 
          getPFieldBuilder() {
        if (pBuilder_ == null) {
          pBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Point.Builder, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.PointOrBuilder>(
                  p_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          p_ = null;
        }
        return pBuilder_;
      }

      private int ddc_ ;
      /**
       * <pre>
       *the used ddc threshold
       * </pre>
       *
       * <code>optional uint32 ddc = 2;</code>
       * @return Whether the ddc field is set.
       */
      @java.lang.Override
      public boolean hasDdc() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *the used ddc threshold
       * </pre>
       *
       * <code>optional uint32 ddc = 2;</code>
       * @return The ddc.
       */
      @java.lang.Override
      public int getDdc() {
        return ddc_;
      }
      /**
       * <pre>
       *the used ddc threshold
       * </pre>
       *
       * <code>optional uint32 ddc = 2;</code>
       * @param value The ddc to set.
       * @return This builder for chaining.
       */
      public Builder setDdc(int value) {
        bitField0_ |= 0x00000002;
        ddc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *the used ddc threshold
       * </pre>
       *
       * <code>optional uint32 ddc = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDdc() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ddc_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality> q_ =
        java.util.Collections.emptyList();
      private void ensureQIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          q_ = new java.util.ArrayList<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality>(q_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder> qBuilder_;

      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality> getQList() {
        if (qBuilder_ == null) {
          return java.util.Collections.unmodifiableList(q_);
        } else {
          return qBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public int getQCount() {
        if (qBuilder_ == null) {
          return q_.size();
        } else {
          return qBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality getQ(int index) {
        if (qBuilder_ == null) {
          return q_.get(index);
        } else {
          return qBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder setQ(
          int index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality value) {
        if (qBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQIsMutable();
          q_.set(index, value);
          onChanged();
        } else {
          qBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder setQ(
          int index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder builderForValue) {
        if (qBuilder_ == null) {
          ensureQIsMutable();
          q_.set(index, builderForValue.build());
          onChanged();
        } else {
          qBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder addQ(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality value) {
        if (qBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQIsMutable();
          q_.add(value);
          onChanged();
        } else {
          qBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder addQ(
          int index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality value) {
        if (qBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQIsMutable();
          q_.add(index, value);
          onChanged();
        } else {
          qBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder addQ(
          com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder builderForValue) {
        if (qBuilder_ == null) {
          ensureQIsMutable();
          q_.add(builderForValue.build());
          onChanged();
        } else {
          qBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder addQ(
          int index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder builderForValue) {
        if (qBuilder_ == null) {
          ensureQIsMutable();
          q_.add(index, builderForValue.build());
          onChanged();
        } else {
          qBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder addAllQ(
          java.lang.Iterable<? extends com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality> values) {
        if (qBuilder_ == null) {
          ensureQIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, q_);
          onChanged();
        } else {
          qBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder clearQ() {
        if (qBuilder_ == null) {
          q_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          qBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public Builder removeQ(int index) {
        if (qBuilder_ == null) {
          ensureQIsMutable();
          q_.remove(index);
          onChanged();
        } else {
          qBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder getQBuilder(
          int index) {
        return getQFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder getQOrBuilder(
          int index) {
        if (qBuilder_ == null) {
          return q_.get(index);  } else {
          return qBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public java.util.List<? extends com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder> 
           getQOrBuilderList() {
        if (qBuilder_ != null) {
          return qBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(q_);
        }
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder addQBuilder() {
        return getQFieldBuilder().addBuilder(
            com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.getDefaultInstance());
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder addQBuilder(
          int index) {
        return getQFieldBuilder().addBuilder(
            index, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.getDefaultInstance());
      }
      /**
       * <pre>
       *The list of qualities, only saving for each change
       * </pre>
       *
       * <code>repeated .serializer.Quality q = 3;</code>
       */
      public java.util.List<com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder> 
           getQBuilderList() {
        return getQFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder> 
          getQFieldBuilder() {
        if (qBuilder_ == null) {
          qBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder>(
                  q_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          q_ = null;
        }
        return qBuilder_;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * metric name
       * </pre>
       *
       * <code>optional string name = 4;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * metric name
       * </pre>
       *
       * <code>optional string name = 4;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * metric name
       * </pre>
       *
       * <code>optional string name = 4;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * metric name
       * </pre>
       *
       * <code>optional string name = 4;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * metric name
       * </pre>
       *
       * <code>optional string name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * metric name
       * </pre>
       *
       * <code>optional string name = 4;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        name_ = value;
        onChanged();
        return this;
      }

      private long start_ ;
      /**
       * <pre>
       * UTC timestamp for start time of the chunk (in ms)
       * </pre>
       *
       * <code>optional uint64 start = 5;</code>
       * @return Whether the start field is set.
       */
      @java.lang.Override
      public boolean hasStart() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * UTC timestamp for start time of the chunk (in ms)
       * </pre>
       *
       * <code>optional uint64 start = 5;</code>
       * @return The start.
       */
      @java.lang.Override
      public long getStart() {
        return start_;
      }
      /**
       * <pre>
       * UTC timestamp for start time of the chunk (in ms)
       * </pre>
       *
       * <code>optional uint64 start = 5;</code>
       * @param value The start to set.
       * @return This builder for chaining.
       */
      public Builder setStart(long value) {
        bitField0_ |= 0x00000010;
        start_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UTC timestamp for start time of the chunk (in ms)
       * </pre>
       *
       * <code>optional uint64 start = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStart() {
        bitField0_ = (bitField0_ & ~0x00000010);
        start_ = 0L;
        onChanged();
        return this;
      }

      private long end_ ;
      /**
       * <pre>
       * UTC timestamp for end time of the chunk (in ms)
       * </pre>
       *
       * <code>optional uint64 end = 6;</code>
       * @return Whether the end field is set.
       */
      @java.lang.Override
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * UTC timestamp for end time of the chunk (in ms)
       * </pre>
       *
       * <code>optional uint64 end = 6;</code>
       * @return The end.
       */
      @java.lang.Override
      public long getEnd() {
        return end_;
      }
      /**
       * <pre>
       * UTC timestamp for end time of the chunk (in ms)
       * </pre>
       *
       * <code>optional uint64 end = 6;</code>
       * @param value The end to set.
       * @return This builder for chaining.
       */
      public Builder setEnd(long value) {
        bitField0_ |= 0x00000020;
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UTC timestamp for end time of the chunk (in ms)
       * </pre>
       *
       * <code>optional uint64 end = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000020);
        end_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> aggs_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetAggs() {
        if (aggs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AggsDefaultEntryHolder.defaultEntry);
        }
        return aggs_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetMutableAggs() {
        onChanged();;
        if (aggs_ == null) {
          aggs_ = com.google.protobuf.MapField.newMapField(
              AggsDefaultEntryHolder.defaultEntry);
        }
        if (!aggs_.isMutable()) {
          aggs_ = aggs_.copy();
        }
        return aggs_;
      }

      public int getAggsCount() {
        return internalGetAggs().getMap().size();
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, double&gt; aggs = 7;</code>
       */

      @java.lang.Override
      public boolean containsAggs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetAggs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAggsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getAggs() {
        return getAggsMap();
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, double&gt; aggs = 7;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.Double> getAggsMap() {
        return internalGetAggs().getMap();
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, double&gt; aggs = 7;</code>
       */
      @java.lang.Override

      public double getAggsOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetAggs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, double&gt; aggs = 7;</code>
       */
      @java.lang.Override

      public double getAggsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetAggs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAggs() {
        internalGetMutableAggs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, double&gt; aggs = 7;</code>
       */

      public Builder removeAggs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableAggs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double>
      getMutableAggs() {
        return internalGetMutableAggs().getMutableMap();
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, double&gt; aggs = 7;</code>
       */
      public Builder putAggs(
          java.lang.String key,
          double value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableAggs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, double&gt; aggs = 7;</code>
       */

      public Builder putAllAggs(
          java.util.Map<java.lang.String, java.lang.Double> values) {
        internalGetMutableAggs().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> tags_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetTags() {
        if (tags_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TagsDefaultEntryHolder.defaultEntry);
        }
        return tags_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableTags() {
        onChanged();;
        if (tags_ == null) {
          tags_ = com.google.protobuf.MapField.newMapField(
              TagsDefaultEntryHolder.defaultEntry);
        }
        if (!tags_.isMutable()) {
          tags_ = tags_.copy();
        }
        return tags_;
      }

      public int getTagsCount() {
        return internalGetTags().getMap().size();
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 8;</code>
       */

      @java.lang.Override
      public boolean containsTags(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetTags().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTagsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getTags() {
        return getTagsMap();
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getTagsMap() {
        return internalGetTags().getMap();
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 8;</code>
       */
      @java.lang.Override

      public java.lang.String getTagsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetTags().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 8;</code>
       */
      @java.lang.Override

      public java.lang.String getTagsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetTags().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTags() {
        internalGetMutableTags().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 8;</code>
       */

      public Builder removeTags(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTags().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableTags() {
        return internalGetMutableTags().getMutableMap();
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 8;</code>
       */
      public Builder putTags(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTags().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * map for precomputed aggs if available
       * </pre>
       *
       * <code>map&lt;string, string&gt; tags = 8;</code>
       */

      public Builder putAllTags(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableTags().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:serializer.Chunk)
    }

    // @@protoc_insertion_point(class_scope:serializer.Chunk)
    private static final com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk();
    }

    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Chunk>
        PARSER = new com.google.protobuf.AbstractParser<Chunk>() {
      @java.lang.Override
      public Chunk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Chunk(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Chunk> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Chunk> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Chunk getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QualityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:serializer.Quality)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *the index of the first point with this quality, not given for first point
     *we will store it each time the quality changes
     * </pre>
     *
     * <code>optional uint32 pointIndex = 1;</code>
     * @return Whether the pointIndex field is set.
     */
    boolean hasPointIndex();
    /**
     * <pre>
     *the index of the first point with this quality, not given for first point
     *we will store it each time the quality changes
     * </pre>
     *
     * <code>optional uint32 pointIndex = 1;</code>
     * @return The pointIndex.
     */
    int getPointIndex();

    /**
     * <pre>
     *the Value of the quality
     * </pre>
     *
     * <code>optional float v = 2;</code>
     * @return Whether the v field is set.
     */
    boolean hasV();
    /**
     * <pre>
     *the Value of the quality
     * </pre>
     *
     * <code>optional float v = 2;</code>
     * @return The v.
     */
    float getV();

    /**
     * <pre>
     *Or the index of the value if it is already stocked
     * </pre>
     *
     * <code>optional uint32 vIndex = 3;</code>
     * @return Whether the vIndex field is set.
     */
    boolean hasVIndex();
    /**
     * <pre>
     *Or the index of the value if it is already stocked
     * </pre>
     *
     * <code>optional uint32 vIndex = 3;</code>
     * @return The vIndex.
     */
    int getVIndex();
  }
  /**
   * Protobuf type {@code serializer.Quality}
   */
  public static final class Quality extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:serializer.Quality)
      QualityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Quality.newBuilder() to construct.
    private Quality(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Quality() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Quality();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Quality(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              pointIndex_ = input.readUInt32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              v_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              vIndex_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Quality_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Quality_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.class, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder.class);
    }

    private int bitField0_;
    public static final int POINTINDEX_FIELD_NUMBER = 1;
    private int pointIndex_;
    /**
     * <pre>
     *the index of the first point with this quality, not given for first point
     *we will store it each time the quality changes
     * </pre>
     *
     * <code>optional uint32 pointIndex = 1;</code>
     * @return Whether the pointIndex field is set.
     */
    @java.lang.Override
    public boolean hasPointIndex() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *the index of the first point with this quality, not given for first point
     *we will store it each time the quality changes
     * </pre>
     *
     * <code>optional uint32 pointIndex = 1;</code>
     * @return The pointIndex.
     */
    @java.lang.Override
    public int getPointIndex() {
      return pointIndex_;
    }

    public static final int V_FIELD_NUMBER = 2;
    private float v_;
    /**
     * <pre>
     *the Value of the quality
     * </pre>
     *
     * <code>optional float v = 2;</code>
     * @return Whether the v field is set.
     */
    @java.lang.Override
    public boolean hasV() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     *the Value of the quality
     * </pre>
     *
     * <code>optional float v = 2;</code>
     * @return The v.
     */
    @java.lang.Override
    public float getV() {
      return v_;
    }

    public static final int VINDEX_FIELD_NUMBER = 3;
    private int vIndex_;
    /**
     * <pre>
     *Or the index of the value if it is already stocked
     * </pre>
     *
     * <code>optional uint32 vIndex = 3;</code>
     * @return Whether the vIndex field is set.
     */
    @java.lang.Override
    public boolean hasVIndex() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     *Or the index of the value if it is already stocked
     * </pre>
     *
     * <code>optional uint32 vIndex = 3;</code>
     * @return The vIndex.
     */
    @java.lang.Override
    public int getVIndex() {
      return vIndex_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, pointIndex_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFloat(2, v_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, vIndex_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, pointIndex_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, v_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, vIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality)) {
        return super.equals(obj);
      }
      com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality other = (com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality) obj;

      if (hasPointIndex() != other.hasPointIndex()) return false;
      if (hasPointIndex()) {
        if (getPointIndex()
            != other.getPointIndex()) return false;
      }
      if (hasV() != other.hasV()) return false;
      if (hasV()) {
        if (java.lang.Float.floatToIntBits(getV())
            != java.lang.Float.floatToIntBits(
                other.getV())) return false;
      }
      if (hasVIndex() != other.hasVIndex()) return false;
      if (hasVIndex()) {
        if (getVIndex()
            != other.getVIndex()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPointIndex()) {
        hash = (37 * hash) + POINTINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getPointIndex();
      }
      if (hasV()) {
        hash = (37 * hash) + V_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getV());
      }
      if (hasVIndex()) {
        hash = (37 * hash) + VINDEX_FIELD_NUMBER;
        hash = (53 * hash) + getVIndex();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code serializer.Quality}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:serializer.Quality)
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.QualityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Quality_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Quality_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.class, com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.Builder.class);
      }

      // Construct using com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        pointIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        v_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        vIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.internal_static_serializer_Quality_descriptor;
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality getDefaultInstanceForType() {
        return com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.getDefaultInstance();
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality build() {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality buildPartial() {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality result = new com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pointIndex_ = pointIndex_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.v_ = v_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.vIndex_ = vIndex_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality) {
          return mergeFrom((com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality other) {
        if (other == com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality.getDefaultInstance()) return this;
        if (other.hasPointIndex()) {
          setPointIndex(other.getPointIndex());
        }
        if (other.hasV()) {
          setV(other.getV());
        }
        if (other.hasVIndex()) {
          setVIndex(other.getVIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int pointIndex_ ;
      /**
       * <pre>
       *the index of the first point with this quality, not given for first point
       *we will store it each time the quality changes
       * </pre>
       *
       * <code>optional uint32 pointIndex = 1;</code>
       * @return Whether the pointIndex field is set.
       */
      @java.lang.Override
      public boolean hasPointIndex() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       *the index of the first point with this quality, not given for first point
       *we will store it each time the quality changes
       * </pre>
       *
       * <code>optional uint32 pointIndex = 1;</code>
       * @return The pointIndex.
       */
      @java.lang.Override
      public int getPointIndex() {
        return pointIndex_;
      }
      /**
       * <pre>
       *the index of the first point with this quality, not given for first point
       *we will store it each time the quality changes
       * </pre>
       *
       * <code>optional uint32 pointIndex = 1;</code>
       * @param value The pointIndex to set.
       * @return This builder for chaining.
       */
      public Builder setPointIndex(int value) {
        bitField0_ |= 0x00000001;
        pointIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *the index of the first point with this quality, not given for first point
       *we will store it each time the quality changes
       * </pre>
       *
       * <code>optional uint32 pointIndex = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPointIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pointIndex_ = 0;
        onChanged();
        return this;
      }

      private float v_ ;
      /**
       * <pre>
       *the Value of the quality
       * </pre>
       *
       * <code>optional float v = 2;</code>
       * @return Whether the v field is set.
       */
      @java.lang.Override
      public boolean hasV() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       *the Value of the quality
       * </pre>
       *
       * <code>optional float v = 2;</code>
       * @return The v.
       */
      @java.lang.Override
      public float getV() {
        return v_;
      }
      /**
       * <pre>
       *the Value of the quality
       * </pre>
       *
       * <code>optional float v = 2;</code>
       * @param value The v to set.
       * @return This builder for chaining.
       */
      public Builder setV(float value) {
        bitField0_ |= 0x00000002;
        v_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *the Value of the quality
       * </pre>
       *
       * <code>optional float v = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearV() {
        bitField0_ = (bitField0_ & ~0x00000002);
        v_ = 0F;
        onChanged();
        return this;
      }

      private int vIndex_ ;
      /**
       * <pre>
       *Or the index of the value if it is already stocked
       * </pre>
       *
       * <code>optional uint32 vIndex = 3;</code>
       * @return Whether the vIndex field is set.
       */
      @java.lang.Override
      public boolean hasVIndex() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       *Or the index of the value if it is already stocked
       * </pre>
       *
       * <code>optional uint32 vIndex = 3;</code>
       * @return The vIndex.
       */
      @java.lang.Override
      public int getVIndex() {
        return vIndex_;
      }
      /**
       * <pre>
       *Or the index of the value if it is already stocked
       * </pre>
       *
       * <code>optional uint32 vIndex = 3;</code>
       * @param value The vIndex to set.
       * @return This builder for chaining.
       */
      public Builder setVIndex(int value) {
        bitField0_ |= 0x00000004;
        vIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Or the index of the value if it is already stocked
       * </pre>
       *
       * <code>optional uint32 vIndex = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearVIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vIndex_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:serializer.Quality)
    }

    // @@protoc_insertion_point(class_scope:serializer.Quality)
    private static final com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality();
    }

    public static com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Quality>
        PARSER = new com.google.protobuf.AbstractParser<Quality>() {
      @java.lang.Override
      public Quality parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Quality(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Quality> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Quality> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.hurence.timeseries.converter.serializer.ChunkProtocolBuffers.Quality getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_serializer_Point_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_serializer_Point_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_serializer_Chunk_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_serializer_Chunk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_serializer_Chunk_AggsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_serializer_Chunk_AggsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_serializer_Chunk_TagsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_serializer_Chunk_TagsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_serializer_Quality_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_serializer_Quality_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034chunk_protocol_buffers.proto\022\nserializ" +
      "er\"`\n\005Point\022\r\n\005tlong\030\001 \001(\004\022\014\n\004tint\030\002 \001(\r" +
      "\022\t\n\001v\030\003 \001(\001\022\016\n\006vIndex\030\004 \001(\r\022\017\n\007tlongBP\030\005" +
      " \001(\004\022\016\n\006tintBP\030\006 \001(\r\"\254\002\n\005Chunk\022\034\n\001p\030\001 \003(" +
      "\0132\021.serializer.Point\022\013\n\003ddc\030\002 \001(\r\022\036\n\001q\030\003" +
      " \003(\0132\023.serializer.Quality\022\014\n\004name\030\004 \001(\t\022" +
      "\r\n\005start\030\005 \001(\004\022\013\n\003end\030\006 \001(\004\022)\n\004aggs\030\007 \003(" +
      "\0132\033.serializer.Chunk.AggsEntry\022)\n\004tags\030\010" +
      " \003(\0132\033.serializer.Chunk.TagsEntry\032+\n\tAgg" +
      "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\032+" +
      "\n\tTagsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:" +
      "\0028\001\"8\n\007Quality\022\022\n\npointIndex\030\001 \001(\r\022\t\n\001v\030" +
      "\002 \001(\002\022\016\n\006vIndex\030\003 \001(\rB/\n+com.hurence.tim" +
      "eseries.converter.serializerH\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_serializer_Point_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_serializer_Point_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_serializer_Point_descriptor,
        new java.lang.String[] { "Tlong", "Tint", "V", "VIndex", "TlongBP", "TintBP", });
    internal_static_serializer_Chunk_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_serializer_Chunk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_serializer_Chunk_descriptor,
        new java.lang.String[] { "P", "Ddc", "Q", "Name", "Start", "End", "Aggs", "Tags", });
    internal_static_serializer_Chunk_AggsEntry_descriptor =
      internal_static_serializer_Chunk_descriptor.getNestedTypes().get(0);
    internal_static_serializer_Chunk_AggsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_serializer_Chunk_AggsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_serializer_Chunk_TagsEntry_descriptor =
      internal_static_serializer_Chunk_descriptor.getNestedTypes().get(1);
    internal_static_serializer_Chunk_TagsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_serializer_Chunk_TagsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_serializer_Quality_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_serializer_Quality_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_serializer_Quality_descriptor,
        new java.lang.String[] { "PointIndex", "V", "VIndex", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
